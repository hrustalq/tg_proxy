services:
  mtg-proxy:
    image: nineseconds/mtg:2
    container_name: mtg-proxy
    restart: unless-stopped
    ports:
      - "${MTG_HOST_PORT:-443}:${MTG_BIND_PORT:-3128}"
      - "8080:8080"
    volumes:
      - ./mtg/start.sh:/start.sh:ro
      - ./mtg/blocklist.txt:/blocklist.txt:ro
    entrypoint: ["/bin/sh", "/start.sh"]
    networks:
      - tg-proxy-network
    environment:
      - MTG_SECRET=${MTG_SECRET}
      - MTG_BIND_PORT=${MTG_BIND_PORT:-3128}
      - MTG_DEBUG=${MTG_DEBUG:-false}
    healthcheck:
      test: ["CMD", "pgrep", "mtg"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  telegram-bot:
    build: .
    container_name: telegram-bot
    restart: unless-stopped
    depends_on:
      - mtg-proxy
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env
    environment:
      - DATABASE_URL=sqlite:///./data/tg_proxy.db
      - MTG_PROXY_HOST=mtg-proxy
      - MTG_PROXY_PORT=${MTG_BIND_PORT:-3128}
      - MTG_SECRET=${MTG_SECRET}
      - PYTHONUNBUFFERED=1
    networks:
      - tg-proxy-network

  # Optional: Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - tg-proxy-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

networks:
  tg-proxy-network:
    driver: bridge

volumes:
  prometheus-data: